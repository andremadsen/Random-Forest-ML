# Download R: https://cran.r-project.org/bin/windows/base/
# Download RStudio: https://www.rstudio.com/products/rstudio/download/#download

# Copy/Paste the following code into RStudio (new Project)
# Press CTRL+Enter to run each line of code below

install.packages("caret")
library(caret)

install.packages("randomForest")
library(randomForest)

# Import data for supervised machine learning
Data <- read.csv(file.choose(), header=T, sep=",", dec=".")

# New dataframe containing the dependent response variable to be classified, and any number of pertinent feature variables
New_Data <- data.frame(Data$DependentVar, Data$FeatureVar1, Data$FeatureVar2, Data$FeatureVar3, Data$FeatureVar4, Data$FeatureVar5, Data$FeatureVar6) 

# Rename columns and remove 'NA' missing data
colnames(New_Data) <- c("DependentVar", "FeatureVar1", "FeatureVar2", "FeatureVar3", "FeatureVar4", "FeatureVar5", "FeatureVar6")
New_Data <- na.omit(New_Data)

# Split 'New_Data' into 'train' (75% of the rows) and 'test' (25% of the rows) subsets 
indexes <- createDataPartition(New_Data$DependentVar, times = 1, p = 0.75, list = FALSE)
train <- New_Data[indexes,]
test <- New_Data[-indexes,]

# Train the randomForest ML classification model
RFmodel <- randomForest(DependentVar ~ ., data=train, ntree=1001, mtry=4, proximity=TRUE)

# Apply the 'RFmodel' to classify unseen 'test' data
result <- predict(RFmodel, test[,2:7], type="response")

# Establish a confusion matrix to evaluate classification performance
confusionMatrix(result, test$DependentVar)

# Visualize importance of variables to determine the DependentVar
varImpPlot(RFmodel)
